# Generated by Django 4.2.1 on 2024-01-21 14:51

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Lyric',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('language', models.CharField(max_length=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('song_title', models.TextField()),
                ('artist', models.TextField(null=True)),
                ('genre', models.TextField(null=True)),
                ('year', models.IntegerField(null=True)),
                ('views', models.IntegerField(null=True)),
                ('website_id', models.TextField(null=True)),
                ('source_name', models.TextField(null=True)),
                ('dialect', models.TextField(null=True)),
                ('singer_nationality', models.TextField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Open_subtitles',
            fields=[
                ('id', models.CharField(max_length=1000, primary_key=True, serialize=False)),
                ('source', models.CharField(max_length=300)),
                ('feed_names', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
                ('rss_files', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
                ('language', models.CharField(max_length=100)),
                ('published_datetime', models.DateField()),
                ('link', models.CharField(max_length=1000)),
                ('title', models.TextField()),
                ('title_translation', models.TextField(null=True)),
                ('title_parsed_clean', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_lemma', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_segmented', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_prefixes', models.JSONField(null=True)),
                ('title_parsed_postag', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_feats', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_translation_override', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_roots', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_lemma_gloss', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_flexion_gloss', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('other_fields', models.JSONField(null=True)),
                ('summary', models.TextField(null=True)),
            ],
            options={
                'db_table': 'articles_open_subtitle',
            },
        ),
        migrations.CreateModel(
            name='Rss_feed',
            fields=[
                ('id', models.CharField(max_length=1000, primary_key=True, serialize=False)),
                ('source', models.CharField(max_length=300)),
                ('feed_names', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
                ('rss_files', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
                ('language', models.CharField(max_length=100)),
                ('published_datetime', models.DateField()),
                ('link', models.CharField(max_length=1000)),
                ('title', models.TextField()),
                ('title_translation', models.TextField(null=True)),
                ('title_parsed_clean', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_lemma', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_segmented', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_prefixes', models.JSONField(null=True)),
                ('title_parsed_postag', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_feats', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_translation_override', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_roots', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_lemma_gloss', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_flexion_gloss', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('other_fields', models.JSONField(null=True)),
                ('summary', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.CharField(max_length=1000, primary_key=True, serialize=False)),
                ('source', models.CharField(max_length=300)),
                ('feed_names', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
                ('rss_files', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
                ('language', models.CharField(max_length=100)),
                ('published_datetime', models.DateField()),
                ('link', models.CharField(max_length=1000)),
                ('title', models.TextField()),
                ('title_translation', models.TextField(null=True)),
                ('title_parsed_clean', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_lemma', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_segmented', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_prefixes', models.JSONField(null=True)),
                ('title_parsed_postag', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_feats', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_translation_override', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_roots', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_lemma_gloss', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_flexion_gloss', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('other_fields', models.JSONField(null=True)),
                ('summary', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Song_habibi',
            fields=[
                ('id', models.CharField(max_length=1000, primary_key=True, serialize=False)),
                ('source', models.CharField(max_length=300)),
                ('feed_names', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
                ('rss_files', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
                ('language', models.CharField(max_length=100)),
                ('published_datetime', models.DateField()),
                ('link', models.CharField(max_length=1000)),
                ('title', models.TextField()),
                ('title_translation', models.TextField(null=True)),
                ('title_parsed_clean', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_lemma', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_segmented', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_prefixes', models.JSONField(null=True)),
                ('title_parsed_postag', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_feats', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_translation_override', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_roots', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_lemma_gloss', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('title_parsed_flexion_gloss', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('other_fields', models.JSONField(null=True)),
                ('summary', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subtitle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('language', models.CharField(max_length=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('title_original', models.TextField()),
                ('title_foreign', models.TextField()),
                ('title_english', models.TextField()),
                ('year', models.IntegerField()),
                ('series_year_start', models.IntegerField()),
                ('series_year_end', models.IntegerField()),
                ('season_number', models.IntegerField()),
                ('episode_number', models.IntegerField()),
                ('runtime_minutes', models.IntegerField()),
                ('type', models.TextField()),
                ('genres', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
                ('people', models.JSONField()),
                ('number_ratings', models.IntegerField()),
                ('imdb_id', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Wikipedia',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('language', models.CharField(max_length=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('page_name', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Wikipedia_sentence',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('language', models.CharField(max_length=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('text', models.TextField()),
                ('translation', models.TextField(null=True)),
                ('time_translated', models.DateTimeField(null=True)),
                ('sentence_order', models.IntegerField()),
                ('parsed_text', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('parsed_clean', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('parsed_segmented', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('parsed_lemma', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('parsed_pos', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('parsed_features', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('parsed_prefixes', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('parsed_suffixes', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('parsed_roots', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('parsed_gloss_lemma', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('parsed_gloss_flexion', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sentences', to='articles.wikipedia')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subtitle_sentence',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('language', models.CharField(max_length=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('text', models.TextField()),
                ('translation', models.TextField(null=True)),
                ('time_translated', models.DateTimeField(null=True)),
                ('sentence_order', models.IntegerField()),
                ('parsed_text', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('parsed_clean', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('parsed_segmented', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('parsed_lemma', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('parsed_pos', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('parsed_features', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('parsed_prefixes', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('parsed_suffixes', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('parsed_roots', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('parsed_gloss_lemma', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('parsed_gloss_flexion', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sentences', to='articles.subtitle')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Lyric_sentence',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('language', models.CharField(max_length=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('text', models.TextField()),
                ('translation', models.TextField(null=True)),
                ('time_translated', models.DateTimeField(null=True)),
                ('sentence_order', models.IntegerField()),
                ('parsed_text', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('parsed_clean', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('parsed_segmented', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('parsed_lemma', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('parsed_pos', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('parsed_features', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('parsed_prefixes', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('parsed_suffixes', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('parsed_roots', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('parsed_gloss_lemma', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('parsed_gloss_flexion', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sentences', to='articles.lyric')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
